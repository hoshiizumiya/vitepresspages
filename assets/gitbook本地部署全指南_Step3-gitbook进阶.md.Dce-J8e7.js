import{_ as s,c as a,o as t,ae as e}from"./chunks/framework.eveauE4a.js";const c=JSON.parse('{"title":"进阶","description":"","frontmatter":{},"headers":[],"relativePath":"gitbook本地部署全指南/Step3-gitbook进阶.md","filePath":"gitbook本地部署全指南/Step3-gitbook进阶.md"}'),h={name:"gitbook本地部署全指南/Step3-gitbook进阶.md"};function n(l,i,o,r,p,k){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="进阶" tabindex="-1">进阶 <a class="header-anchor" href="#进阶" aria-label="Permalink to &quot;进阶&quot;">​</a></h1><h2 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h2><p>推荐资源：</p><ul><li><a href="https://blog.csdn.net/gongch0604/article/details/107494736" target="_blank" rel="noreferrer">gitbook使用及 book.json 详细配置</a></li><li><a href="https://juejin.cn/post/6844903865146441741#heading-12" target="_blank" rel="noreferrer">推荐12个实用的 gitbook 插件</a></li></ul><h2 id="自动编译推送脚本" tabindex="-1">自动编译推送脚本： <a class="header-anchor" href="#自动编译推送脚本" aria-label="Permalink to &quot;自动编译推送脚本：&quot;">​</a></h2><p>根目录新建 text 文档，输入以下内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _book</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -am</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Update&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:hoshiizumiya/gitbookpages</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><p>更改文件名和后缀，将上述脚本保存为 <code>deploy.bat</code>，然后在根目录下执行 <code>bash deploy.sh</code> 即可推送到远程仓库(无编译)<br> 解释：<br> 每次编译后都会重建 <code>_book</code> 文件夹，丢失 git 的更改信息，直接使用传统方式的推送会导致与 origin 大量的更改难以合并分支。<br> 所以需要重新新建 git 仓库，然后将 <code>_book</code> 文件夹下的所有文件强制提交覆盖远程仓库，<code>--force</code> 参数是强制推送，因为每次都是新的 <code>_book</code> 文件夹，所以需要强制推送，注意此操作也会删除 origin 的提交记录，毕竟本地没有保留更改信息。<br> 也在此推荐Visual Studio 的 git 管理工具，非常方便。</p><h2 id="使用-jsdelivr-加速本地静态资源" tabindex="-1">使用 JsDelivr 加速本地静态资源 <a class="header-anchor" href="#使用-jsdelivr-加速本地静态资源" aria-label="Permalink to &quot;使用 JsDelivr 加速本地静态资源&quot;">​</a></h2><p>图床使用 Github 仓库，但是由于国内网络原因，Github 的资源加载速度较慢，所以可以使用 jsdelivr 加速加载。</p><p>直接上操作： 格式：<code>https://cdn.jsdelivr.net/gh/用户名/文件路径</code>（无分支） 举例：<code>https://cdn.jsdelivr.net/gh/hoshiizumiya/images（仓库名）/Image_1714537953090.jpg（根目录）</code></p><h2 id="项目迁移" tabindex="-1">项目迁移 <a class="header-anchor" href="#项目迁移" aria-label="Permalink to &quot;项目迁移&quot;">​</a></h2><p>正在迁移项目到 <a href="https://www.cnblogs.com/hoshiizumiya/" target="_blank" rel="noreferrer">博客园</a></p>`,13)]))}const g=s(h,[["render",n]]);export{c as __pageData,g as default};
